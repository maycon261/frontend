{"version":3,"sources":["../../src/providers/users/users.ts","../../src/pages/login/login.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient, HttpHeaders,HttpResponse,HttpParams  } from '@angular/common/http';\nimport { RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Injectable, ReflectiveInjector } from '@angular/core';\nimport { Client } from './../../app/cliente';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/map';\n\n\n/**\n * Representa um servico de consumo HTTP/REST \n *\n * @author maycon\n */\n@Injectable()\nexport class UsersProvider {\n\n  /**\n   * url do servico rest\n   */\n  private API_URL ='https://ecommerc-pucminas-rest.herokuapp.com/api/'\n\n  constructor(public http: HttpClient) {\n    \n  }\n\n/**\n * metodo cria um usuario e envia o endpoint \n * via POST\n * @author maycon\n * @returns e tradado no obj interceptador\n */\n  createUser(id: string,  nome_cliente: string,    endereco: string,\n    estado: string,    municipio: string,    telefone: string,    email: string,\n    senha: string){\n      return new Promise((resolve, reject) => {\n  \n        let url = this.API_URL + 'cliente';\n\n        var data ={\n          id: id,  nome_cliente: nome_cliente,  endereco: endereco,\n          estado: estado,  municipio: municipio,  telefone: telefone,  email: email,\n          senha: senha\n        };\n  \n        this.http.post(url, data)\n          .subscribe((result: any) => {\n            resolve(result.json());\n          },\n          (error) => {\n            reject(error.json());\n          });\n      });\n  }\n\n  \n\n  /**\n   * metodo envia os parametros ao endpoint via POST \n   * @param email \n   * @param senha\n   * @returns e tradado no obj interceptador \n   */\n  login(email: string,  senha: string){\n    let url = this.API_URL + 'login';   \n\n    return this.http.post(url,{email,senha})\n    \n}\n\n\n  /**\n   * metodo solicita todos os clientes da base ao endpoint via GET\n   * @returns lista de clientes tradado no obj interceptador \n   */\n  getTodosUsuarios(): Observable<Client[]> {\n    let url = this.API_URL + 'clientes';    \n    return this.http\n      .get<Client[]>(url);      \n} \n\n\n\n/**\n   * metodo solicita um  cliente da base ao endpoint via GET\n   * @param cpf do cliente\n   * @returns o cliente e tradado no obj interceptador \n   */    \nget(id: string): Observable<Client> {  \n\n    let url = this.API_URL + 'cliente/' + id;    \n    return this.http.get<Client>(url);\n    \n  }\n\n\n \n  /**\n   * Insere um cliente via POST\n   * @param cpf \n   * @param nome_cliente \n   * @param endereco \n   * @param estado \n   * @param municipio \n   * @param telefone \n   * @param email \n   * @param senha \n   * @returns boolean e tratrado no obj interceptador\n   */\n  insert(cpf: string,  nome_cliente: string,    endereco: string,\n    estado: string,    municipio: string,    telefone: string,    email: string,\n    senha: string): Observable<Boolean> {\n\n    let url = this.API_URL + 'cliente';\n\n    const expandedHeaders = this.prepareHeader(null);\n\n    return this.http.post<Boolean>(url, {cpf,nome_cliente,endereco,estado,municipio,telefone,email,senha }, expandedHeaders)\n      \n  }\n\n  /**\n   * Atualiza um cliente via PATCH\n   * o endpoint tratara quais os campos que serao atualizado\n   * @param cpf \n   * @param nome_cliente \n   * @param endereco \n   * @param estado \n   * @param municipio \n   * @param telefone \n   * @param email \n   * @param senha \n   * @returns boolean e tratrado no obj interceptador\n   */\n  update(cpf: string,  nome_cliente: string,    endereco: string,\n    estado: string,    municipio: string,    telefone: string,    email: string,\n    senha: string) {\n    \n      let url = this.API_URL + 'cliente/' + cpf ;     \n\n      const expandedHeaders = this.prepareHeader(null);\n   \n    \n      return this.http.patch(url, {nome_cliente,endereco,estado,municipio,telefone,email,senha }, expandedHeaders)\n      \n  }\n\n  /**\n   * delete um cliente\n   * @param cliente \n   * @returns boolean e tratrado no obj interceptador\n   */\n  remove(cliente: Client):Observable<Boolean> {\n\n      let url = this.API_URL + 'cliente/' + cliente.cpf ;     \n\n      const expandedHeaders = this.prepareHeader(null);\n\n      return this.http.delete<boolean>(url,expandedHeaders);\n    \n  }\n\n  /**\n   * cria um Header padrao\n   * @param headers \n   */\n  private prepareHeader(headers: HttpHeaders | null): object {\n    headers = headers || new HttpHeaders();\n\n    headers = headers.set('Content-Type', 'application/json');\n    headers = headers.set('Accept', 'application/json');\n    headers = headers.set('charset', 'UTF-8');\n\n    return {\n        headers: headers\n    }\n}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/users/users.ts","import {UsersProvider} from './../../providers/users/users';\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ToastController } from 'ionic-angular';\nimport { Client } from './../../app/cliente';\n\n/**Resposavel em validar o login no app */\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n\n \n  \n  MyCliente: Client = { email: \"\", senha: \"\" };\n  \n\n  \n\n  constructor(\n    public navCtrl: NavController, public navParams: NavParams, \n    private toast: ToastController, private userProvider:UsersProvider) {\n\n      this.MyCliente = {};\n      \n\n     \n  }\n\n  /**\n   * Ao cliente no primeiro acesso\n   * app redireciona para tela de cadastro\n   */\n  openCreateUser(){\n    this.navCtrl.push('CreateUserPage');\n  }\n\n  /**\n   * Valida dados de acesso\n   * @returns boolean e tratamos as mensagens\n   */\n  validalogin(){\n    this.userProvider.login(this.MyCliente.email,this.MyCliente.senha)\n      .subscribe(data =>{\n        console.log(data);\n        //this.MyCliente = data;\n\n        if (data == true) {\n          this.toast.create({message:\"Usuário logado com sucesso\", position: 'botton',duration: 3000}).present();\n          this.navCtrl.push('UserListPage');  \n        }else {\n          this.toast.create({message:\"Usuário Invalido tente novamente\", position: 'botton',duration: 3000}).present();\n        }\n\n        \n      },\n      err =>{\n        console.log(err);\n        this.toast.create({message:\"Erro ao efetuar login. Erro: \" + err, position: 'botton',duration: 3000}).present();\n      });\n      \n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 114;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 114\n// module chunks = 5","var map = {\n\t\"../pages/create-user/create-user.module\": [\n\t\t285,\n\t\t3\n\t],\n\t\"../pages/login/login.module\": [\n\t\t286,\n\t\t4\n\t],\n\t\"../pages/user-detail/user-detail.module\": [\n\t\t287,\n\t\t2\n\t],\n\t\"../pages/user-edit/user-edit.module\": [\n\t\t288,\n\t\t1\n\t],\n\t\"../pages/user-list/user-list.module\": [\n\t\t289,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 155;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 155\n// module chunks = 5","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { LoginPage } from '../pages/login/login';\nimport { HomePage } from '../pages/home/home';\n\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { UsersProvider } from '../providers/users/users';\n\n/**\n * Carrega os modulos necessarios para utilizacao do app\n *  \n *\n * @author maycon\n */\n@NgModule({\n  declarations: [\n    MyApp,\n    LoginPage,\n    \n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    HttpClientModule,\n    \n    \n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    LoginPage    \n    //HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    UsersProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\nimport { LoginPage } from '../pages/login/login';\n\n/**\n * Define qual a pagina root do app \n *  \n *\n * @author maycon\n */\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = LoginPage; \n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {     \n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}